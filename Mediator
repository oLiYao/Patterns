interface Mediator is
    method notify(sender: Component, event: string)



class AuthenticationDialog implements Mediator is
    private field title: string
    private field loginOrRegisterChkBx: Checkbox
    private field loginUsername, loginPassword: Textbox
    private field registrationUsername, registrationPassword,
                  registrationEmail: Textbox
    private field okBtn, cancelBtn: Button

    constructor AuthenticationDialog() is
    
  
    method notify(sender, event) is
        if (sender == loginOrRegisterChkBx and event == "check")
            if (loginOrRegisterChkBx.checked)
                title = "Log in"
               
            else
                title = "Register"
            

        if (sender == okBtn && event == "click")
            if (loginOrRegister.checked)
        
                if (!found)
                 
            else
             


class Component is
    field dialog: Mediator

    constructor Component(dialog) is
        this.dialog = dialog

    method click() is
        dialog.notify(this, "click")

    method keypress() is
        dialog.notify(this, "keypress")


class Button extends Component is


class Textbox extends Component is
   

class Checkbox extends Component is
    method check() is
        dialog.notify(this, "check")
